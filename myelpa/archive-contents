(1
 (bind-key . [(20171210 2125) nil "A simple way to manage personal keybindings" single])
 (use-package . [(20171226 1104) ((emacs (24 3)) (bind-key (2 4))) "A configuration macro for simplifying your .emacs" tar])
 (dash . [(20171028 854) nil "A modern list library for Emacs" single])
 (spacemacs-theme . [(20171217 611) nil "Color theme with a dark and light versions" tar])
 (avy . [(20171230 220) ((emacs (24 1)) (cl-lib (0 5))) "Jump to arbitrary positions in visible text and select text quickly." single])
 (ace-window . [(20171228 1109) ((avy (0 2 0))) "Quickly switch windows." single])
 (s . [(20171102 227) nil "The long lost Emacs string manipulation library." single])
 (ag . [(20180102 1441) ((dash (2 8 0)) (s (1 9 0)) (cl-lib (0 5))) "A front-end for ag ('the silver searcher'), the C ack replacement." single])
 (buffer-move . [(20160615 1103) nil "easily swap buffers" single])
 (company . [(20180101 1101) ((emacs (24 3))) "Modular text completion framework" tar])
 (page-break-lines . [(20171210 31) ((emacs (24 4))) "Display ^L page breaks as tidy horizontal lines" single])
 (dashboard . [(20180101 2352) ((emacs (24 4)) (page-break-lines (0 11))) "A startup screen extracted from Spacemacs" tar])
 (popup . [(20160709 729) ((cl-lib (0 5))) "Visual Popup User Interface" single])
 (f . [(20171230 1229) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" single])
 (dumb-jump . [(20171219 401) ((emacs (24 3)) (f (0 17 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "jump to definition for multiple languages without configuration." single])
 (exec-path-from-shell . [(20170508 4) nil "Get environment variables such as $PATH from the shell" single])
 (expand-region . [(20171217 2125) nil "Increase selected region by semantic units." tar])
 (epl . [(20150517 433) ((cl-lib (0 3))) "Emacs Package Library" single])
 (pkg-info . [(20150517 443) ((epl (0 8))) "Information about packages" single])
 (flycheck . [(20171214 1215) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "Onfly syntax checking" tar])
 (ivy . [(20180104 1212) ((emacs (24 1))) "Incremental Vertical completYon" tar])
 (swiper . [(20180102 1035) ((emacs (24 1)) (ivy (0 9 0))) "Isearch with an overview. Oh, man!" single])
 (counsel . [(20180104 1210) ((emacs (24 3)) (swiper (0 9 0))) "Various completion functions using Ivy" single])
 (projectile . [(20171229 1155) ((emacs (24 3)) (pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single])
 (counsel-projectile . [(20180105 632) ((counsel (0 10 0)) (projectile (0 14 0))) "Ivy integration for Projectile" single])
 (counsel-pydoc . [(20171018 1342) ((emacs (24 3)) (ivy (0 9 1))) "run pydoc with counsel" single])
 (counsel-world-clock . [(20171201 2337) ((ivy (0 9 0)) (s (1 12 0))) "Display world clock using Ivy." single])
 (help-fns+ . [(20170223 733) nil "Extensions to `help-fns.el'." single])
 (highlight . [(20170702 732) nil "Highlighting commands." single])
 (hlinum . [(20170507 2227) ((cl-lib (0 2))) "Extension for linum.el to highlight current line number" single])
 (hydra . [(20171120 1042) ((cl-lib (0 5))) "Make bindings that stick around." tar])
 (ivy-hydra . [(20171130 1143) ((emacs (24 1)) (ivy (0 9 0)) (hydra (0 13 4))) "Additional key bindings for Ivy" single])
 (shut-up . [(20150423 522) ((cl-lib (0 3)) (emacs (24))) "Shut up would you!" single])
 (loop . [(20160813 707) nil "friendly imperative loop structures" single])
 (list-utils . [(20160414 702) nil "List-manipulation utility functions" single])
 (elisp-refs . [(20171224 1532) ((dash (2 12 0)) (f (0 18 2)) (list-utils (0 4 4)) (loop (1 2)) (s (1 11 0))) "find callers of elisp functions or macros" single])
 (dash-functional . [(20171028 804) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" single])
 (helpful . [(20180102 1528) ((emacs (25 1)) (dash (2 12 0)) (dash-functional (1 2 0)) (s (1 11 0)) (elisp-refs (1 2)) (shut-up (0 3))) "a better *help* buffer" single])
 (async . [(20180103 2312) nil "Asynchronous processing in Emacs" tar])
 (with-editor . [(20171217 1239) ((emacs (24 4)) (async (1 9))) "Use the Emacsclient as $EDITOR" tar])
 (magit-popup . [(20171217 1235) ((emacs (24 4)) (async (1 9 2)) (dash (2 13 0))) "Define prefixsuffix command combos" tar])
 (let-alist . [(1 0 5) ((emacs (24 1))) "Easily letlist by their names" single])
 (git-commit . [(20171214 929) ((emacs (24 4)) (dash (20170810)) (with-editor (20170817))) "Edit Git commit messages" single])
 (ghub . [(20171218 1028) ((emacs (24 4)) (let-alist (1 0 5))) "minuscule client library for the Github API" tar])
 (magit . [(20180103 1555) ((emacs (24 4)) (async (20170823)) (dash (20170810)) (ghub (20171207)) (git-commit (20170823)) (let-alist (1 0 5)) (magit-popup (20171121)) (with-editor (20170817))) "A Git porcelain inside Emacs." tar])
 (move-text . [(20170908 2030) nil "Move current line or region with Mdown." single])
 (multiple-cursors . [(20170908 1452) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (neotree . [(20170522 758) ((cl-lib (0 5))) "A tree plugin like NerdTree for Vim" tar])
 (smartparens . [(20171201 242) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar])
 (smex . [(20151212 1409) ((emacs (24))) "Mstyle fuzzy matching." single])
 (string-inflection . [(20180102 643) nil "underscore > lowerCamelCase conversion of names" single])
 (pfuture . [(20171116 812) ((emacs (24 4))) "a simple wrapper around asynchronous processes" single])
 (treemacs . [(20171226 500) ((emacs (24 4)) (cl-lib (0 5)) (dash (2 11 0)) (s (1 10 0)) (f (0 11 0)) (ace-window (0 9 0)) (pfuture (1 2)) (hydra (0 13 2))) "A tree style file explorer package" tar])
 (treemacs-projectile . [(20171204 845) ((projectile (0 14 0)) (treemacs (0))) "Projectile integration for treemacs" single])
 (undo-tree . [(20170706 246) nil "Treat undo history as a tree" single])
 (vlf . [(20170830 1148) nil "View Large Files" tar])
 (which-key . [(20171217 1916) ((emacs (24 4))) "Display available keybindings in popup" single])
 (wgrep . [(20141016 1656) nil "Writable grep buffer and apply the changes to files" single])
 (yasnippet . [(20180102 1824) ((cl-lib (0 5))) "Yet another snippet extension for Emacs." tar])
 (zygospore . [(20140703 152) nil "reversible Cwindows)" single])
 (pyvenv . [(20171215 1329) nil "Python virtual environment interface" single])
 (highlight-indentation . [(20171218 137) nil "Minor modes for highlighting indentation" single])
 (find-file-in-project . [(20171219 1858) ((ivy (0 10 0)) (emacs (24 3))) "Find file/directory and review Diff/Patch/Commit efficiently everywhere" single])
 (elpy . [(20180104 510) ((company (0 9 2)) (emacs (24 4)) (find-file-in-project (3 3)) (highlight-indentation (0 5 0)) (pyvenv (1 3)) (yasnippet (0 8 0)) (s (1 11 0))) "Emacs Python Development Environment" tar])
 (pip-requirements . [(20171109 1439) ((dash (2 8 0))) "A major mode for editing pip requirements files." single])
 (py-autopep8 . [(20160925 352) nil "Use autopep8 to beautify a Python buffer" single])
 (js2-mode . [(20171224 1833) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (tern . [(20170925 1333) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" single])
 (js-comint . [(20171129 2056) ((emacs (24 3))) "JavaScript interpreter in window." single])
 (js2-refactor . [(20171207 202) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar])
 (web-mode . [(20171118 1132) ((emacs (23 1))) "major mode for editing web templates" single])
 (htmlize . [(20171017 141) nil "Convert buffer text and decorations to HTML." single])
 (simple-httpd . [(20171004 938) ((cl-lib (0 3))) "pure elisp HTTP server" single])
 (impatient-mode . [(20170505 1921) ((cl-lib (0 3)) (simple-httpd (1 4 0)) (htmlize (1 40))) "Serve buffers live over HTTP" tar])
 (ggtags . [(20171203 1553) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single])
 (company-c-headers . [(20170531 1330) ((emacs (24 1)) (company (0 8))) "Company mode backend for C/C++ header files" single])
 (markdown-mode . [(20180101 503) ((emacs (24 4)) (cl-lib (0 5))) "Major mode for Markdown-formatted text" single])
 (dired+ . [(20170818 1411) nil "Extensions to Dired." single])
 (org-bullets . [(20171127 526) nil "Show bullets in org8 characters" single])
)
